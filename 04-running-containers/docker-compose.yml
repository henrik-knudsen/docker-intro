services:
  client-react-nginx:
    image: client-react-nginx
    build:
      context: ../02-demo-web-application/client-react/
      dockerfile: ../../03-building-container-images/client-react/solution/Dockerfile.5
    networks:
      - frontend
    ports:
      - 80:8080
    restart: unless-stopped

  api-node:
    image: api-node
    build:
      context: ../02-demo-web-application/api-node/
      dockerfile: ../../03-building-container-images/api-node/solution/Dockerfile.7
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped

  api-golang:
    image: api-golang
    build:
      context: ../02-demo-web-application/api-golang/
      dockerfile: ../../03-building-container-images/api-golang/solution/Dockerfile.6
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 8080:8080
    restart: unless-stopped

  api-dotnet:
    image: api-dotnet
    build:
      context: ../02-demo-web-application/api-dotnet/
      dockerfile: ../../03-building-container-images/api-dotnet/solution/Dockerfile.5
    depends_on:
      - db
    environment:
      - DATABASE_URL=Server=db;Port=5432;User Id=postgres;Password=foobarbaz;Database=postgres
    networks:
      - frontend
      - backend
    ports:
      - 5181:5181
    restart: unless-stopped

  db:
    image: postgres:15.1-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=foobarbaz
    networks:
      - backend
    ports:
      - 5432:5432

volumes:
  pgdata:


networks:
  frontend:
  backend:
